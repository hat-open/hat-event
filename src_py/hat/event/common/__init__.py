"""Common functionality shared between clients and event server"""

import time

from hat.event.common.backend import (BackendClosedError,
                                      Backend,
                                      BackendConf,
                                      BackendRegisteredEventsCb,
                                      BackendFlushedEventsCb,
                                      CreateBackend,
                                      BackendInfo,
                                      import_backend_info)
from hat.event.common.collection import (EventTypeCollection,
                                         ListEventTypeCollection,
                                         TreeEventTypeCollection)
from hat.event.common.common import (json_schema_repo,
                                     sbs_repo,
                                     ServerId,
                                     SessionId,
                                     InstanceId,
                                     EventTypeSegment,
                                     EventType,
                                     Timestamp,
                                     min_timestamp,
                                     max_timestamp,
                                     Status,
                                     Order,
                                     OrderBy,
                                     EventId,
                                     EventPayloadBinary,
                                     EventPayloadJson,
                                     EventPayload,
                                     Event,
                                     RegisterEvent,
                                     QueryLatestParams,
                                     QueryTimeseriesParams,
                                     QueryServerParams,
                                     QueryParams,
                                     QueryResult)
from hat.event.common.encoder import (timestamp_to_bytes,
                                      timestamp_from_bytes,
                                      timestamp_to_float,
                                      timestamp_from_float,
                                      timestamp_to_datetime,
                                      timestamp_from_datetime,
                                      timestamp_to_sbs,
                                      timestamp_from_sbs,
                                      status_to_sbs,
                                      status_from_sbs,
                                      event_to_sbs,
                                      event_from_sbs,
                                      register_event_to_sbs,
                                      register_event_from_sbs,
                                      query_params_to_sbs,
                                      query_params_from_sbs,
                                      query_result_to_sbs,
                                      query_result_from_sbs,
                                      event_payload_to_sbs,
                                      event_payload_from_sbs)
from hat.event.common.matches import matches_query_type
from hat.event.common.module import (SourceType,
                                     Source,
                                     Engine,
                                     Module,
                                     ModuleConf,
                                     CreateModule,
                                     ModuleInfo,
                                     import_module_info)
from hat.event.common.subscription import (Subscription,
                                           create_subscription)


__all__ = ['BackendClosedError',
           'Backend',
           'BackendConf',
           'BackendRegisteredEventsCb',
           'BackendFlushedEventsCb',
           'CreateBackend',
           'BackendInfo',
           'import_backend_info',
           'EventTypeCollection',
           'ListEventTypeCollection',
           'TreeEventTypeCollection',
           'json_schema_repo',
           'sbs_repo',
           'ServerId',
           'SessionId',
           'InstanceId',
           'EventTypeSegment',
           'EventType',
           'Timestamp',
           'min_timestamp',
           'max_timestamp',
           'Status',
           'Order',
           'OrderBy',
           'EventId',
           'EventPayloadBinary',
           'EventPayloadJson',
           'EventPayload',
           'Event',
           'RegisterEvent',
           'QueryLatestParams',
           'QueryTimeseriesParams',
           'QueryServerParams',
           'QueryParams',
           'QueryResult',
           'timestamp_to_bytes',
           'timestamp_from_bytes',
           'timestamp_to_float',
           'timestamp_from_float',
           'timestamp_to_datetime',
           'timestamp_from_datetime',
           'timestamp_to_sbs',
           'timestamp_from_sbs',
           'status_to_sbs',
           'status_from_sbs',
           'event_to_sbs',
           'event_from_sbs',
           'register_event_to_sbs',
           'register_event_from_sbs',
           'query_params_to_sbs',
           'query_params_from_sbs',
           'query_result_to_sbs',
           'query_result_from_sbs',
           'event_payload_to_sbs',
           'event_payload_from_sbs',
           'matches_query_type',
           'SourceType',
           'Source',
           'Engine',
           'Module',
           'ModuleConf',
           'CreateModule',
           'ModuleInfo',
           'import_module_info',
           'Subscription',
           'create_subscription',
           'now']


def now() -> Timestamp:
    """Create new timestamp representing current time"""
    return timestamp_from_float(time.time())
